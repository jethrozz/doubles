<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubles.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.doubles.entity.Article">
    <id column="article_id" jdbcType="VARCHAR" property="article_id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="is_haveImg" jdbcType="TINYINT" property="is_haveImg" />
    <result column="like_number" jdbcType="INTEGER" property="like_number" />
    <result column="collect_number" jdbcType="INTEGER" property="collect_number" />
    <result column="transmit_number" jdbcType="INTEGER" property="transmit_number" />
    <result column="is_report" jdbcType="TINYINT" property="is_report" />
    <result column="report_number" jdbcType="INTEGER" property="report_number" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.doubles.entity.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, user_id, is_haveImg, like_number, collect_number, transmit_number, is_report, 
    report_number, type, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.doubles.entity.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.doubles.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{article_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where article_id = #{article_id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.doubles.entity.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doubles.entity.Article">
    insert into article (article_id, user_id, is_haveImg, 
      like_number, collect_number, transmit_number, 
      is_report, report_number, type, 
      create_time, update_time, content
      )
    values (#{article_id,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{is_haveImg,jdbcType=TINYINT}, 
      #{like_number,jdbcType=INTEGER}, #{collect_number,jdbcType=INTEGER}, #{transmit_number,jdbcType=INTEGER}, 
      #{is_report,jdbcType=TINYINT}, #{report_number,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doubles.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="article_id != null">
        article_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="is_haveImg != null">
        is_haveImg,
      </if>
      <if test="like_number != null">
        like_number,
      </if>
      <if test="collect_number != null">
        collect_number,
      </if>
      <if test="transmit_number != null">
        transmit_number,
      </if>
      <if test="is_report != null">
        is_report,
      </if>
      <if test="report_number != null">
        report_number,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="article_id != null">
        #{article_id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="is_haveImg != null">
        #{is_haveImg,jdbcType=TINYINT},
      </if>
      <if test="like_number != null">
        #{like_number,jdbcType=INTEGER},
      </if>
      <if test="collect_number != null">
        #{collect_number,jdbcType=INTEGER},
      </if>
      <if test="transmit_number != null">
        #{transmit_number,jdbcType=INTEGER},
      </if>
      <if test="is_report != null">
        #{is_report,jdbcType=TINYINT},
      </if>
      <if test="report_number != null">
        #{report_number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doubles.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.article_id != null">
        article_id = #{record.article_id,jdbcType=VARCHAR},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.is_haveImg != null">
        is_haveImg = #{record.is_haveImg,jdbcType=TINYINT},
      </if>
      <if test="record.like_number != null">
        like_number = #{record.like_number,jdbcType=INTEGER},
      </if>
      <if test="record.collect_number != null">
        collect_number = #{record.collect_number,jdbcType=INTEGER},
      </if>
      <if test="record.transmit_number != null">
        transmit_number = #{record.transmit_number,jdbcType=INTEGER},
      </if>
      <if test="record.is_report != null">
        is_report = #{record.is_report,jdbcType=TINYINT},
      </if>
      <if test="record.report_number != null">
        report_number = #{record.report_number,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set article_id = #{record.article_id,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      is_haveImg = #{record.is_haveImg,jdbcType=TINYINT},
      like_number = #{record.like_number,jdbcType=INTEGER},
      collect_number = #{record.collect_number,jdbcType=INTEGER},
      transmit_number = #{record.transmit_number,jdbcType=INTEGER},
      is_report = #{record.is_report,jdbcType=TINYINT},
      report_number = #{record.report_number,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set article_id = #{record.article_id,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      is_haveImg = #{record.is_haveImg,jdbcType=TINYINT},
      like_number = #{record.like_number,jdbcType=INTEGER},
      collect_number = #{record.collect_number,jdbcType=INTEGER},
      transmit_number = #{record.transmit_number,jdbcType=INTEGER},
      is_report = #{record.is_report,jdbcType=TINYINT},
      report_number = #{record.report_number,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doubles.entity.Article">
    update article
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="is_haveImg != null">
        is_haveImg = #{is_haveImg,jdbcType=TINYINT},
      </if>
      <if test="like_number != null">
        like_number = #{like_number,jdbcType=INTEGER},
      </if>
      <if test="collect_number != null">
        collect_number = #{collect_number,jdbcType=INTEGER},
      </if>
      <if test="transmit_number != null">
        transmit_number = #{transmit_number,jdbcType=INTEGER},
      </if>
      <if test="is_report != null">
        is_report = #{is_report,jdbcType=TINYINT},
      </if>
      <if test="report_number != null">
        report_number = #{report_number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{article_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.doubles.entity.Article">
    update article
    set user_id = #{user_id,jdbcType=VARCHAR},
      is_haveImg = #{is_haveImg,jdbcType=TINYINT},
      like_number = #{like_number,jdbcType=INTEGER},
      collect_number = #{collect_number,jdbcType=INTEGER},
      transmit_number = #{transmit_number,jdbcType=INTEGER},
      is_report = #{is_report,jdbcType=TINYINT},
      report_number = #{report_number,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where article_id = #{article_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doubles.entity.Article">
    update article
    set user_id = #{user_id,jdbcType=VARCHAR},
      is_haveImg = #{is_haveImg,jdbcType=TINYINT},
      like_number = #{like_number,jdbcType=INTEGER},
      collect_number = #{collect_number,jdbcType=INTEGER},
      transmit_number = #{transmit_number,jdbcType=INTEGER},
      is_report = #{is_report,jdbcType=TINYINT},
      report_number = #{report_number,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where article_id = #{article_id,jdbcType=VARCHAR}
  </update>
</mapper>