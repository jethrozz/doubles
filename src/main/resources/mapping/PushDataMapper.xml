<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doubles.dao.PushDataMapper" >
  <cache eviction="LRU" flushInterval="10800000"  size="512" readOnly="true" />
  <resultMap id="BaseResultMap" type="com.doubles.entity.PushData" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="is_push" property="isPush" jdbcType="INTEGER" />
    <result column="content_id" property="contentId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="belong_user" property="belongUser" jdbcType="VARCHAR" />
    <result column="now_user" property="nowUser" jdbcType="VARCHAR" />
    <result column="push_user" property="pushUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="old" column="belong_user" select="com.doubles.dao.UsersMapper.selectByPrimaryKey"></association>
    <association property="now" column="now_user" select="com.doubles.dao.UsersMapper.selectByPrimaryKey"></association>
    <association property="article" column="content_id" select="com.doubles.dao.ArticleMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, is_push, content_id, type, belong_user, now_user, push_user, create_time, update_time
  </sql>
  <select id="getPageByPushUser" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    from push_data
    WHERE push_user = #{userId} ORDER BY create_time DESC
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.doubles.entity.PushDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from push_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from push_data
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true">
    delete from push_data
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.doubles.entity.PushDataExample" flushCache="true">
    delete from push_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doubles.entity.PushData" flushCache="true">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into push_data (id, is_push, content_id,
    type, belong_user, now_user,
    push_user, create_time, update_time
    )
    values (#{id,jdbcType=VARCHAR}, #{isPush,jdbcType=INTEGER}, #{contentId,jdbcType=VARCHAR},
    #{type,jdbcType=INTEGER}, #{belongUser,jdbcType=VARCHAR}, #{nowUser,jdbcType=VARCHAR},
    #{pushUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.doubles.entity.PushData" flushCache="true">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into push_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isPush != null" >
        is_push,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="belongUser != null" >
        belong_user,
      </if>
      <if test="nowUser != null" >
        now_user,
      </if>
      <if test="pushUser != null" >
        push_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="isPush != null" >
        #{isPush,jdbcType=INTEGER},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="belongUser != null" >
        #{belongUser,jdbcType=VARCHAR},
      </if>
      <if test="nowUser != null" >
        #{nowUser,jdbcType=VARCHAR},
      </if>
      <if test="pushUser != null" >
        #{pushUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doubles.entity.PushDataExample" resultType="java.lang.Integer" >
    select count(*) from push_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update push_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.isPush != null" >
        is_push = #{record.isPush,jdbcType=INTEGER},
      </if>
      <if test="record.contentId != null" >
        content_id = #{record.contentId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.belongUser != null" >
        belong_user = #{record.belongUser,jdbcType=VARCHAR},
      </if>
      <if test="record.nowUser != null" >
        now_user = #{record.nowUser,jdbcType=VARCHAR},
      </if>
      <if test="record.pushUser != null" >
        push_user = #{record.pushUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update push_data
    set id = #{record.id,jdbcType=VARCHAR},
    is_push = #{record.isPush,jdbcType=INTEGER},
    content_id = #{record.contentId,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=INTEGER},
    belong_user = #{record.belongUser,jdbcType=VARCHAR},
    now_user = #{record.nowUser,jdbcType=VARCHAR},
    push_user = #{record.pushUser,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doubles.entity.PushData" >
    update push_data
    <set >
      <if test="isPush != null" >
        is_push = #{isPush,jdbcType=INTEGER},
      </if>
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="belongUser != null" >
        belong_user = #{belongUser,jdbcType=VARCHAR},
      </if>
      <if test="nowUser != null" >
        now_user = #{nowUser,jdbcType=VARCHAR},
      </if>
      <if test="pushUser != null" >
        push_user = #{pushUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doubles.entity.PushData" >
    update push_data
    set is_push = #{isPush,jdbcType=INTEGER},
      content_id = #{contentId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      belong_user = #{belongUser,jdbcType=VARCHAR},
      now_user = #{nowUser,jdbcType=VARCHAR},
      push_user = #{pushUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>