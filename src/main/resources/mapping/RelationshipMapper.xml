<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubles.dao.RelationshipMapper">
  <resultMap id="BaseResultMap" type="com.doubles.entity.Relationship">
    <id column="relationship_id" jdbcType="VARCHAR" property="relationship_id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="friend_id" jdbcType="VARCHAR" property="friend_id" />
    <result column="is_friend" jdbcType="TINYINT" property="is_friend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    relationship_id, user_id, friend_id, is_friend, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.doubles.entity.RelationshipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relationship
    where relationship_id = #{relationship_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from relationship
    where relationship_id = #{relationship_id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.doubles.entity.RelationshipExample">
    delete from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doubles.entity.Relationship">
    insert into relationship (relationship_id, user_id, friend_id, 
      is_friend, create_time, update_time
      )
    values (#{relationship_id,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{friend_id,jdbcType=VARCHAR}, 
      #{is_friend,jdbcType=TINYINT}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doubles.entity.Relationship">
    insert into relationship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationship_id != null">
        relationship_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="friend_id != null">
        friend_id,
      </if>
      <if test="is_friend != null">
        is_friend,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationship_id != null">
        #{relationship_id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="friend_id != null">
        #{friend_id,jdbcType=VARCHAR},
      </if>
      <if test="is_friend != null">
        #{is_friend,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doubles.entity.RelationshipExample" resultType="java.lang.Long">
    select count(*) from relationship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update relationship
    <set>
      <if test="record.relationship_id != null">
        relationship_id = #{record.relationship_id,jdbcType=VARCHAR},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.friend_id != null">
        friend_id = #{record.friend_id,jdbcType=VARCHAR},
      </if>
      <if test="record.is_friend != null">
        is_friend = #{record.is_friend,jdbcType=TINYINT},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update relationship
    set relationship_id = #{record.relationship_id,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      friend_id = #{record.friend_id,jdbcType=VARCHAR},
      is_friend = #{record.is_friend,jdbcType=TINYINT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doubles.entity.Relationship">
    update relationship
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="friend_id != null">
        friend_id = #{friend_id,jdbcType=VARCHAR},
      </if>
      <if test="is_friend != null">
        is_friend = #{is_friend,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where relationship_id = #{relationship_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doubles.entity.Relationship">
    update relationship
    set user_id = #{user_id,jdbcType=VARCHAR},
      friend_id = #{friend_id,jdbcType=VARCHAR},
      is_friend = #{is_friend,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where relationship_id = #{relationship_id,jdbcType=VARCHAR}
  </update>
</mapper>