<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubles.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.doubles.entity.Comment">
    <id column="comment_id" jdbcType="VARCHAR" property="comment_id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="comment_content" jdbcType="VARCHAR" property="comment_content" />
    <result column="object_type" jdbcType="INTEGER" property="object_type" />
    <result column="object_id" jdbcType="VARCHAR" property="object_id" />
    <result column="to_user" jdbcType="VARCHAR" property="to_user" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, user_id, comment_content, object_type, object_id, to_user, type, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.doubles.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{comment_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comment
    where comment_id = #{comment_id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.doubles.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doubles.entity.Comment">
    insert into comment (comment_id, user_id, comment_content, 
      object_type, object_id, to_user, 
      type, create_time, update_time
      )
    values (#{comment_id,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{comment_content,jdbcType=VARCHAR}, 
      #{object_type,jdbcType=INTEGER}, #{object_id,jdbcType=VARCHAR}, #{to_user,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doubles.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comment_id != null">
        comment_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="comment_content != null">
        comment_content,
      </if>
      <if test="object_type != null">
        object_type,
      </if>
      <if test="object_id != null">
        object_id,
      </if>
      <if test="to_user != null">
        to_user,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comment_id != null">
        #{comment_id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="comment_content != null">
        #{comment_content,jdbcType=VARCHAR},
      </if>
      <if test="object_type != null">
        #{object_type,jdbcType=INTEGER},
      </if>
      <if test="object_id != null">
        #{object_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user != null">
        #{to_user,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doubles.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.comment_id != null">
        comment_id = #{record.comment_id,jdbcType=VARCHAR},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.comment_content != null">
        comment_content = #{record.comment_content,jdbcType=VARCHAR},
      </if>
      <if test="record.object_type != null">
        object_type = #{record.object_type,jdbcType=INTEGER},
      </if>
      <if test="record.object_id != null">
        object_id = #{record.object_id,jdbcType=VARCHAR},
      </if>
      <if test="record.to_user != null">
        to_user = #{record.to_user,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.comment_id,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      comment_content = #{record.comment_content,jdbcType=VARCHAR},
      object_type = #{record.object_type,jdbcType=INTEGER},
      object_id = #{record.object_id,jdbcType=VARCHAR},
      to_user = #{record.to_user,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doubles.entity.Comment">
    update comment
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="comment_content != null">
        comment_content = #{comment_content,jdbcType=VARCHAR},
      </if>
      <if test="object_type != null">
        object_type = #{object_type,jdbcType=INTEGER},
      </if>
      <if test="object_id != null">
        object_id = #{object_id,jdbcType=VARCHAR},
      </if>
      <if test="to_user != null">
        to_user = #{to_user,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{comment_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doubles.entity.Comment">
    update comment
    set user_id = #{user_id,jdbcType=VARCHAR},
      comment_content = #{comment_content,jdbcType=VARCHAR},
      object_type = #{object_type,jdbcType=INTEGER},
      object_id = #{object_id,jdbcType=VARCHAR},
      to_user = #{to_user,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where comment_id = #{comment_id,jdbcType=VARCHAR}
  </update>
</mapper>